{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DropdownDirective {\n  constructor(elRef, renderer) {\n    this.elRef = elRef;\n    this.renderer = renderer;\n    this.opened = false;\n  }\n  onButtonClicked() {\n    if (!this.opened) {\n      this.renderer.addClass(this.elRef.nativeElement, \"open\");\n    } else {\n      this.renderer.removeClass(this.elRef.nativeElement, \"opened\");\n    }\n    this.opened = !this.opened;\n  }\n}\nDropdownDirective.ɵfac = function DropdownDirective_Factory(t) {\n  return new (t || DropdownDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nDropdownDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: DropdownDirective,\n  selectors: [[\"\", \"appDropdown\", \"\"]],\n  hostBindings: function DropdownDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function DropdownDirective_click_HostBindingHandler() {\n        return ctx.onButtonClicked();\n      });\n    }\n  }\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,iBAAiB;EAI5BC,YAAoBC,KAAiB,EAAUC,QAAmB;IAA9C,UAAK,GAALD,KAAK;IAAsB,aAAQ,GAARC,QAAQ;IAFvD,WAAM,GAAY,KAAK;EAE+C;EAE/CC,eAAe;IACpC,IAAG,CAAC,IAAI,CAACC,MAAM,EAAC;MACd,IAAI,CAACF,QAAQ,CAACG,QAAQ,CAAC,IAAI,CAACJ,KAAK,CAACK,aAAa,EAAE,MAAM,CAAC;KACzD,MACG;MACF,IAAI,CAACJ,QAAQ,CAACK,WAAW,CAAC,IAAI,CAACN,KAAK,CAACK,aAAa,EAAE,QAAQ,CAAC;;IAE/D,IAAI,CAACF,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;EAC5B;;AAdWL,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAS;EAAAC;IAAA;;eAAjBC,qBAAiB;MAAA","names":["DropdownDirective","constructor","elRef","renderer","onButtonClicked","opened","addClass","nativeElement","removeClass","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["C:\\Users\\adrim\\Documents\\Cursos Udemy\\Curso Angular\\RecipesBookApp\\src\\app\\shared\\dropdown.directive.ts"],"sourcesContent":["import { Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appDropdown]'\n})\nexport class DropdownDirective {\n\n  opened: boolean = false;\n\n  constructor(private elRef: ElementRef, private renderer: Renderer2) { }\n\n  @HostListener(\"click\") onButtonClicked(){\n    if(!this.opened){\n      this.renderer.addClass(this.elRef.nativeElement, \"open\");\n    }\n    else{\n      this.renderer.removeClass(this.elRef.nativeElement, \"opened\");\n    }\n    this.opened = !this.opened\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}