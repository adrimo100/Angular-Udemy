{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    backgroundColor: a0\n  };\n};\nexport class ServerComponent {\n  constructor() {\n    this.serverId = 10;\n    this.serverStatus = \"offline\";\n    this.serverStatus = Math.random() > 0.5 ? \"online\" : \"offline\";\n  }\n  getServerStatus() {\n    return this.serverStatus;\n  }\n  getColor() {}\n}\nServerComponent.ɵfac = function ServerComponent_Factory(t) {\n  return new (t || ServerComponent)();\n};\nServerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServerComponent,\n  selectors: [[\"app-server\"]],\n  decls: 2,\n  vars: 6,\n  consts: [[3, \"ngStyle\"]],\n  template: function ServerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, ctx.getColor()));\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate3(\"\", \"Server\", \" with ID \", ctx.serverId, \" is \", ctx.getServerStatus(), \"\");\n    }\n  },\n  dependencies: [i1.NgStyle],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;AAMA,OAAM,MAAOA,eAAe;EAIxBC;IAHA,aAAQ,GAAG,EAAE;IACb,iBAAY,GAAG,SAAS;IAGpB,IAAI,CAACC,YAAY,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,GAAG,QAAQ,GAAG,SAAS;EAClE;EAEAC,eAAe;IACX,OAAO,IAAI,CAACH,YAAY;EAC5B;EAEAI,QAAQ,IAER;;AAdSN,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCH5BC,4BAA6C;MAAAA,YAA0D;MAAAA,iBAAI;;;MAAxGA,oEAAyC;MAACA,eAA0D;MAA1DA,iGAA0D","names":["ServerComponent","constructor","serverStatus","Math","random","getServerStatus","getColor","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\adrim\\Documents\\Cursos Udemy\\Curso Angular\\Angular-Udemy\\src\\app\\server\\server.component.ts","C:\\Users\\adrim\\Documents\\Cursos Udemy\\Curso Angular\\Angular-Udemy\\src\\app\\server\\server.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\n\r\n@Component({ //Con este decorador indicamos que esta clase corresponde a un decorador. Cada vez que llamamos al componente en el html es una instacia distinta de la clase.\r\n    selector: \"app-server\", //Será la etiquete html que nos permitirá usar el componente.\r\n    templateUrl: './server.component.html' //Archivo .html que tendrá el código del componente.\r\n}) \r\nexport class ServerComponent {\r\n    serverId = 10;\r\n    serverStatus = \"offline\"\r\n\r\n    constructor() {\r\n        this.serverStatus = Math.random() > 0.5 ? \"online\" : \"offline\";\r\n    }\r\n\r\n    getServerStatus(){\r\n        return this.serverStatus;\r\n    }\r\n\r\n    getColor(){\r\n        \r\n    }\r\n}","<!--String Interpolation. Con {{}} podemos escribir código TS en su interior que debe devolver un string-->\r\n<!--ngStyle es una directiva para cambiar el estilo de un componente. Los [] no son parte de la directiva, es property binding para darle valor a la propiedad.\r\nVincualamos a una propiedad de la directiva.-->\r\n<p [ngStyle]='{backgroundColor: getColor()}'>{{\"Server\"}} with ID {{serverId}} is {{getServerStatus()}}</p>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}